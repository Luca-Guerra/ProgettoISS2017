/* Generated by AN DISI Unibo */ 
/*
This code is generated only ONCE
*/
package it.unibo.console;
import alice.tuprolog.NoSolutionException;
import alice.tuprolog.SolveInfo;
import it.unibo.is.interfaces.IActivity;
import it.unibo.is.interfaces.IIntent;
import it.unibo.is.interfaces.IOutputEnvView;
import it.unibo.qactors.QActorContext;

public class Console extends AbstractConsole implements IActivity { 
	private String actionA = "A";
	private String actionNonDavantiS1_1 = "ND_S1_1";
	private String actionS1 = "S1";
	
	public Console(String actorId, QActorContext myCtx, IOutputEnvView outEnvView )  throws Exception{
		super(actorId, myCtx, outEnvView);
	}
	
	public int memoSonarEvent(int D, int A){
		if(A > 85 && A < 95){
			solveGoal("assign(dist,"+D+")");
		}else{
			outEnvView.addOutput("valore con angolo errato!");
		}
		return 1;
	}
	
	/*
	 * se l'angolo è circa 90 gradi e la distanza è minore di 80 
	 * stiamo rilevando qualcosa davandi al sonar che non sia il
	 * muro
	 */
	public int sonarReached(){
		int dist;
		try {
			dist  = getFromKB("dist");
			return (dist < 80) ? 1 : 0;
		} catch (NoSolutionException e) {
			outEnvView.addOutput("eccezione:" + e.getMessage());
		}
		return 0;
	}
	
	public int inAreaB(){
		try {
			// controllo se abbiamo raggiunto l'ultimo sonar
			if(getFromKB("nsonars") == getFromKB("sonarreached")) 
				return 1;
		} catch (NoSolutionException e) {
			e.printStackTrace();
		}
		return 0;
	}
	
	private int getFromKB(String variable) throws NoSolutionException{
		return Integer.parseInt(solveGoal("value(" + variable + ",X)").getVarValue("X").toString());
	}

	public boolean activateGui() throws Exception{
		outEnvView.getEnv().addCmdPanel("btn", new String[]{actionA,actionNonDavantiS1_1,actionS1}, this);
		return true;
	}
	
	@Override
	public void execAction(String cmd) {
		try {
			if(cmd.equals(actionA)){
				// settare una variabile nella KB della console
				solveGoal("assign(area_a,1)");
			}
			else if(cmd.equals(actionNonDavantiS1_1)){
				this.emit("sonar", "p(90,86)");
			}
			else if(cmd.equals(actionS1)){
				this.emit("sonar", "p(50,90)");
			}
		} catch (Exception e) {
			outEnvView.addOutput(e.getMessage());
		} 
	}

	@Override
	public void execAction() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void execAction(IIntent input) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public String execActionWithAnswer(String cmd) {
		// TODO Auto-generated method stub
		return null;
	}
}
